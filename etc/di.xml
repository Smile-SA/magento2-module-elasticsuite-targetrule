<?xml version="1.0"?>
<!--
/**
 * Smile_ElasticsuiteTargetRule dependency injection configuration.
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade this module to newer
 * versions in the future.
 *
 * @category  Smile
 * @package   Smile\ElasticsuiteTargetRule
 * @author    Richard BAYET <richard.bayet@smile.fr>
 * @copyright 2017 Smile
 * @license   Open Software License ("OSL") v. 3.0
 */
 -->
<config xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="urn:magento:framework:ObjectManager/etc/config.xsd">

    <!-- ES index handler declaration -->
    <virtualType name="targetRuleSearchIndexHandler" type="\Smile\ElasticsuiteCore\Indexer\GenericIndexerHandler">
        <arguments>
            <argument name="indexName" xsi:type="const">Smile\ElasticsuiteTargetRule\Model\Indexer\TargetRule\Percolator::INDEX_IDENTIFIER</argument>
            <argument name="typeName" xsi:type="string">_doc</argument>
        </arguments>
    </virtualType>

    <!-- ES indexer declaration -->
    <type name="Smile\ElasticsuiteTargetRule\Model\Indexer\TargetRule\Percolator">
        <arguments>
            <argument name="indexerHandler" xsi:type="object">targetRuleSearchIndexHandler</argument>
        </arguments>
    </type>

    <!-- plugins for indexing -->

    <!-- rule/product : rule changes event indexer -->
    <type name="Magento\TargetRule\Model\Indexer\TargetRule\Rule\Product">
        <plugin name="smile_elasticsuite_target_rule_native_rule_product_indexer_hijacker"
                type="\Smile\ElasticsuiteTargetRule\Plugin\Indexer\TargetRule\Rule\Product"
                sortOrder="10"
                disabled="false" />
    </type>
    <!-- product/rule : product changes event indexer -->
    <type name="Magento\TargetRule\Model\Indexer\TargetRule\Product\Rule">
        <plugin name="smile_elasticsuite_target_rule_native_product_rule_indexer_hijacker"
                type="\Smile\ElasticsuiteTargetRule\Plugin\Indexer\TargetRule\Product\Rule"
                sortOrder="10"
                disabled="false" />
    </type>
    <!-- Note: use the DI in your own module to change the cache cleaning behavior (alter argument "cleanRulesCache") -->
    <type name="\Smile\ElasticsuiteTargetRule\Plugin\Indexer\TargetRule\Rule\Product">
        <arguments>
            <argument name="cleanRulesCache" xsi:type="boolean">true</argument>
        </arguments>
    </type>
    <type name="\Smile\ElasticsuiteTargetRule\Plugin\Indexer\TargetRule\Product\Rule">
        <arguments>
            <argument name="cleanRulesCache" xsi:type="boolean">true</argument>
        </arguments>
    </type>

    <!-- force fulltext/percolators reindex after catalog_product reindex -->
    <type name="Magento\CatalogSearch\Model\Indexer\Fulltext">
        <plugin name="smile_elasticsuite_target_rule_rules_fulltext_reindex_on_product_fulltext_reindex"
                type="Smile\ElasticsuiteTargetRule\Plugin\CatalogSearch\Indexer\Fulltext"
                sortOrder="10"
                disabled="false" />
    </type>

    <!-- there might be a need for attr. simply having the flag "is_used_for_promo_rules" to 1
         to have the same ES index mapping as attr. with "is_filterable/is_filterable_in_search" set to 1,
         but so far it is not obvious (hence the plugin is disabled by default) -->
    <type name="Smile\ElasticsuiteCatalog\Helper\Attribute">
        <plugin name="smile_elasticsuitecatalog_helper_attribute_mapping_field_options"
                type="Smile\ElasticsuiteTargetRule\Plugin\Catalog\Helper\Attribute"
                sortOrder="10"
                disabled="true" />
    </type>

    <!-- rewrites for querying -->
    <preference for="Magento\TargetRule\Model\ResourceModel\Index"
                type="Smile\ElasticsuiteTargetRule\Model\ResourceModel\Index" />

    <type name="Smile\ElasticsuiteTargetRule\Model\ResourceModel\Index">
        <arguments>
            <argument name="productCollectionFactory" xsi:type="object">Magento\CatalogSearch\Model\ResourceModel\Fulltext\CollectionFactory</argument>
        </arguments>
    </type>

    <!-- plugins for querying -->
    <type name="\Magento\TargetRule\Model\ResourceModel\Rule\Collection">
        <plugin name="smile_elasticsuite_target_rule_collection_add_product_filter"
                type="Smile\ElasticsuiteTargetRule\Plugin\Rule\Collection"
                sortOrder="10"
                disabled="false" />
    </type>

    <!-- TargetRule actions/conditions rules converter helper configuration -->
    <type name="Smile\ElasticsuiteTargetRule\Helper\RuleConverter">
        <arguments>
            <argument name="conditionsMapping" xsi:type="array">
                <item name="Magento\TargetRule\Model\Rule\Condition\Combine" xsi:type="string">Smile\ElasticsuiteVirtualCategory\Model\Rule\Condition\Combine</item>
                <item name="Magento\TargetRule\Model\Rule\Condition\Product\Attributes" xsi:type="string">Smile\ElasticsuiteVirtualCategory\Model\Rule\Condition\Product</item>
            </argument>
            <argument name="actionsMapping" xsi:type="array">
                <item name="Magento\TargetRule\Model\Actions\Condition\Combine" xsi:type="string">Smile\ElasticsuiteVirtualCategory\Model\Rule\Condition\Combine</item>
                <item name="Magento\TargetRule\Model\Actions\Condition\Product\Attributes" xsi:type="string">Smile\ElasticsuiteTargetRule\Model\Actions\Condition\Product\Attributes</item>
                <item name="Magento\TargetRule\Model\Actions\Condition\Product\Special\Price" xsi:type="string">Smile\ElasticsuiteTargetRule\Model\Actions\Condition\Product\Special\Price</item>
            </argument>
        </arguments>
    </type>

    <!-- Since ES 5, indices containing percolator queries should have a mapping
         which reflects the mapping of the index you wanna percolate query against -->
    <type name="Smile\ElasticsuiteCore\Api\Index\IndexOperationInterface">
        <plugin name="merge_percolator_mapping"
                type="Smile\ElasticsuiteTargetRule\Plugin\Index\IndexOperation"/>
    </type>

    <!-- Datasources resolver -->
    <type name="Smile\ElasticsuiteCore\Index\DataSourceResolver">
        <arguments>
            <argument name="datasources" xsi:type="array">
                <item name="catalog_product" xsi:type="array">
                    <item name="percolator" xsi:type="object">Smile\ElasticsuiteTargetRule\Model\Indexer\TargetRule\Percolator\Datasource\PercolatorData</item>
                </item>
            </argument>
        </arguments>
    </type>

</config>
